#!/usr/bin/env node
'use strict';

const logger = require('onf-logger'),
    argv = require('yargs')
    .usage('Usage: stank [options]')

    .describe('debug', 'Turns on debug logging')
    .alias('debug', 'd')
    .boolean('debug')

    .describe('file', 'The file to analyze')
    .alias('file', 'f')
    .nargs('f', 1)

    //.describe('flags', 'A bitmask, specifies which types are captured')
    //.nargs('f', 1)

    .describe('html', 'Creates an html document of the analysis')
    .boolean('html')

    .describe('verbosity', 'The level of verbosity')
    .alias('v', 'v')
    .alias('vv', 'vv')

    .help('help')
    .alias('help', 'h')
    .argv,

    generator = require(
        `onf-static/src/generator/${
            argv.html ? 'html' : 'log'
        }`
    ),

    // Unfortunately, a single -v returns a Boolean while multiples (-vv, -vvv) return an Array.
    verbosity = argv.v && Array.isArray(argv.v) ?
        argv.v.length :
            argv.v ?
                1 : 0,

    visitor = require('../src/visitor'),
    onfStatic = require('onf-static/src/index'),
    file = argv.file;

onfStatic.setOptions({
    type: argv.html ? 'html' : 'log',
    visitor,
    verbose: verbosity
});

// Logging is enabled by default.
/*
if (!argv.debug) {
    logger.disable();
}
*/

if (!file) {
    const stdin = process.stdin;
    let buf = '';

    stdin.setEncoding('utf8');

    stdin.on('readable', () => {
        const chunk = stdin.read();

        if (chunk !== null) {
            buf += chunk;
        }
    });

    stdin.on('end', () => {
        onfStatic.makeTree(buf, true)
        .then(logger.raw)
        .catch(logger.error);
    });
} else {
    onfStatic.makeTree(file)
    .then(logger.raw)
    .catch(logger.error);
}

